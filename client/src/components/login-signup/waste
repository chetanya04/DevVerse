import React, { useState } from 'react'
import "./loginSignupStyle.css";
import { Link, useNavigate } from 'react-router-dom'
import { ToastContainer } from 'react-toastify';
import { APIUrl, handleError, handleSuccess } from '../utlis';
import Profile from "../../assets/profile.png";
import Eye from "../../assets/eye.png"
import Lock from "../../assets/lock.png"
import Email from "../../assets/email.png"
import Domain from "../../assets/domain.png"
import Company from "../../assets/company.png"
import Password from "../../assets/password.png"

function Signup() {
  const [showModal, setShowModal] = useState(false);
    const [activeTab, setActiveTab] = useState("user");
    const [showPassword, setShowPassword] = useState(false);
    const [signupInfo, setSignupInfo] = useState({
        name: '',
        email: '',
        password: ''
    })

    const navigate = useNavigate();
    const handleChange = (e) => {
        const { name, value } = e.target;
        console.log(name, value);
        const copySignupInfo = { ...signupInfo };
        copySignupInfo[name] = value;
        setSignupInfo(copySignupInfo);
    }

    const handleSignup = async (e) => {
        e.preventDefault();
        const { name, email, password } = signupInfo;
        if (!name || !email || !password) {
            return handleError('name, email and password are required')
        }
        try {
            const url = `${APIUrl}/auth/signup`;
            const response = await fetch(url, {
                method: "POST",
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(signupInfo)
            });
            const result = await response.json();
            const { success, message, error } = result;
            if (success) {
                handleSuccess(message);
                setTimeout(() => {
                    navigate('/login')
                }, 1000)
            } else if (error) {
                const details = error?.details[0].message;
                handleError(details);
            } else if (!success) {
                handleError(message);
            }
            console.log(result);
        } catch (err) {
            handleError(err);
        }
    }

    const openModal = () => {
      setShowModal(true);
    };
  
    const closeModal = () => {
      setShowModal(false);
    };
  
    const handleClickOutside = (e) => {
      if (e.target.classList.contains("signup-modal")) {
        closeModal();
      }
    };

    const togglePasswordVisibility = () => {
        setShowPassword(!showPassword);
      };
    
      const switchTab = (tab) => {
        setActiveTab(tab);
      };


    return (
      <div className='signup-container'>
        <button onClick={openModal} className="signup-btn-trigger">
        Sign Up
      </button>
      {showModal && (
        <div className="signup-modal" onClick={handleClickOutside}>
          <div className="register-modal-containerr">
            {/* signup tab change */}
            <div className="signup-header-tab">
              <button
                className={`signup-tab ${activeTab === "user" ? "active" : ""}`}
                onClick={() => switchTab("user")}
              >
                Sign up as User
              </button>
              <button
                className={`signup-tab ${
                  activeTab === "expert" ? "active" : ""
                }`}
                onClick={() => switchTab("expert")}
              >
                Sign up as Expert
              </button>
            </div>

            {/* Signup Form */}
            <form onSubmit={handleSignup} className="signup-form">
              <div className="input-group">
                <span className="icon">
                  <img
                    src={Profile}
                    style={{ width: "20px", height: "20px" }}
                  />
                </span>
                <label className="form-text">Name</label>
                <input onChange={handleChange} value={signupInfo.name} type="text" name="name" placeholder="Name" required />
              </div>

              <div className="input-group">
                <span className="icon">
                  <img
                    src={Company}
                    style={{ width: "20px", height: "20px" }}
                  />
                </span>
                <label className="form-text">Company/Institution</label>
                <input
                  type="text"
                  name="company"
                  placeholder="Company"
                  required
                />
              </div>

              <div className="input-group">
                <span className="icon">
                  <img
                    src={Domain}
                    style={{ width: "18px", height: "18px" }}
                  />
                </span>
                <label className="form-text">Domain</label>
                <input
                  type="text"
                  name="domain"
                  placeholder="Domain"
                  required
                />
              </div>

              <div className="input-group">
                <span className="icon">
                  <img
                    src={Email}
                    style={{ width: "18px", height: "18px" }}
                  />
                </span>
                <label className="form-text">Email</label>
                <input
                value={signupInfo.email}
                  type="email"
                  name="email"
                  placeholder="example@gmail.com"
                  required
                  onChange={handleChange}
                />
              </div>

              {/* Password Input with Visibility Toggle */}
              <div className="input-group">
                <span className="icon">
                  <img
                    src={Password}
                    style={{ width: "18px", height: "18px" }}
                  />
                </span>
                <label className="form-text">Password</label>
                <div className="changes-vertically">
                <input
                value={signupInfo.password}
                  type={showPassword ? "text" : "password"} // Toggle input type
                  name="password"
                  placeholder= "6+ Characters, 1 Capital Letter"
                  required
                  onChange={handleChange}
                />
                <span className="toggle-password" onClick={togglePasswordVisibility}>
                  <img src={showPassword ? Lock : Eye} // Switch icons based on visibility
                      alt="Toggle Password Icon"
                      width={18}
                      height={18}/>
                </span>
                </div>
                </div>
              <div className="check-box-function">
                <div className="checkbox">
                <input type="checkbox"/>
                <label className="rememberMe">Remember me</label>
                </div>
                <div className="link">
                <a href="#" className="forgot-password">
                  Forgot Password?
                </a>
                </div>
              </div>
              <button type="submit" className="signup-btn">
                Sign Up
              </button>
              <p className="login-text">
                Already have an account? <Link to="/login">Log In</Link>
              </p>
            </form>
            <ToastContainer/>
            </div>
          </div>
      )}
        </div>
    )
}

export default Signup